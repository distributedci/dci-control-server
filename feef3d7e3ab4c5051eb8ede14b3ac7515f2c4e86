{
  "comments": [
    {
      "key": {
        "uuid": "6097f8c0_1a28e563",
        "filename": "dci/stores/filesystem.py",
        "patchSetId": 22
      },
      "lineNbr": 36,
      "author": {
        "id": 29
      },
      "writtenOn": "2018-10-25T11:07:46Z",
      "side": 1,
      "message": "This error message is hiding the real error message from the OSError exception. You should rewrite str(e) in StoreExceptions to know what\u0027s going on.",
      "revId": "feef3d7e3ab4c5051eb8ede14b3ac7515f2c4e86",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b91a954_33e89550",
        "filename": "dci/stores/filesystem.py",
        "patchSetId": 22
      },
      "lineNbr": 40,
      "author": {
        "id": 29
      },
      "writtenOn": "2018-10-25T11:07:46Z",
      "side": 1,
      "message": "raise exception if filename doesn\u0027t exist\n\ns/open(file_path)/open(file_path, \u0027r\u0027)",
      "revId": "feef3d7e3ab4c5051eb8ede14b3ac7515f2c4e86",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c965cf4_9de2b2da",
        "filename": "dci/stores/filesystem.py",
        "patchSetId": 22
      },
      "lineNbr": 40,
      "author": {
        "id": 28
      },
      "writtenOn": "2018-10-25T12:18:30Z",
      "side": 1,
      "message": "An exception will be raised if the file does not exist when trying open it.\n\nAlso \" If mode is omitted, it defaults to \u0027r\u0027. \" [1] Not sure there\u0027s a gain to being explicit with the mode.\n\n[1] https://docs.python.org/2/library/functions.html#open",
      "parentUuid": "0b91a954_33e89550",
      "revId": "feef3d7e3ab4c5051eb8ede14b3ac7515f2c4e86",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71f1cedc_4f328e3b",
        "filename": "dci/stores/filesystem.py",
        "patchSetId": 22
      },
      "lineNbr": 42,
      "author": {
        "id": 29
      },
      "writtenOn": "2018-10-25T11:07:46Z",
      "side": 1,
      "message": "raise exception if filename doesn\u0027t exist",
      "revId": "feef3d7e3ab4c5051eb8ede14b3ac7515f2c4e86",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccdd24c0_e369b169",
        "filename": "dci/stores/filesystem.py",
        "patchSetId": 22
      },
      "lineNbr": 42,
      "author": {
        "id": 28
      },
      "writtenOn": "2018-10-25T12:18:30Z",
      "side": 1,
      "message": "An exception will be raised if the file does not exist when trying open it",
      "parentUuid": "71f1cedc_4f328e3b",
      "revId": "feef3d7e3ab4c5051eb8ede14b3ac7515f2c4e86",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d3f83bb_00e37639",
        "filename": "dci/stores/filesystem.py",
        "patchSetId": 22
      },
      "lineNbr": 58,
      "author": {
        "id": 28
      },
      "writtenOn": "2018-10-25T10:37:11Z",
      "side": 1,
      "message": "Although we\u0027re using this for dev purpose, loading the whole file into memory may not be a very good idea.\n\nSomething looking like this would be better\n\n   while data \u003d read(A_REASONABLE_BUFFER_SIZE):\n      f.write(data)",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 58,
        "endChar": 30
      },
      "revId": "feef3d7e3ab4c5051eb8ede14b3ac7515f2c4e86",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64bbcb87_a5bf38a0",
        "filename": "dci/stores/filesystem.py",
        "patchSetId": 22
      },
      "lineNbr": 58,
      "author": {
        "id": 29
      },
      "writtenOn": "2018-10-25T11:11:22Z",
      "side": 1,
      "message": "It\u0027s not loading the whole file into memory, the loop is reading the file line by line. Unless a line is very very long its not a problem imo.",
      "parentUuid": "2d3f83bb_00e37639",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 58,
        "endChar": 30
      },
      "revId": "feef3d7e3ab4c5051eb8ede14b3ac7515f2c4e86",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92dcaffc_a94051b4",
        "filename": "dci/stores/filesystem.py",
        "patchSetId": 22
      },
      "lineNbr": 58,
      "author": {
        "id": 28
      },
      "writtenOn": "2018-10-25T12:14:14Z",
      "side": 1,
      "message": "Quoting [1]: \"The whole point of readlines() is that it reads the entire file into memory at once and parses it into a list.\"\n\nAlso: https://docs.python.org/2/library/stdtypes.html?highlight\u003dreadlines#file.readlines\n\nEventually using readline() (without an \u0027s\u0027) would be better, but nothing warrants that the file is a text file and has line ends/carriage returns, so better suppose that this is a binary file and read it chunk by chunk.\n\n\n[1]http://stupidpythonideas.blogspot.com/2013/06/readlines-considered-silly.html",
      "parentUuid": "64bbcb87_a5bf38a0",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 58,
        "endChar": 30
      },
      "revId": "feef3d7e3ab4c5051eb8ede14b3ac7515f2c4e86",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "577ca0cb_676e9fe7",
        "filename": "dci/stores/swift.py",
        "patchSetId": 22
      },
      "lineNbr": 52,
      "author": {
        "id": 29
      },
      "writtenOn": "2018-10-25T11:07:46Z",
      "side": 1,
      "message": "if e.http_status !\u003d 404:\n    raise exceptions.StoreExceptions(\u0027delete file %s error: %s\u0027 % (filename, str(e))\nelse:\n    LOG.warn(\u0027file %s not found\u0027 % filename)",
      "revId": "feef3d7e3ab4c5051eb8ede14b3ac7515f2c4e86",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b2991e1_a9d1a1a3",
        "filename": "dci/stores/swift.py",
        "patchSetId": 22
      },
      "lineNbr": 78,
      "author": {
        "id": 29
      },
      "writtenOn": "2018-10-25T11:07:46Z",
      "side": 1,
      "message": "It\u0027s not part of the patch but could you replace http_reason by http_code \u003d\u003d 404 ?",
      "revId": "feef3d7e3ab4c5051eb8ede14b3ac7515f2c4e86",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    }
  ]
}