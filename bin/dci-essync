#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (C) 2017 Red Hat, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

from dci import dci_config
from dciclient.v1.api import context
from dciclient.v1.api import file
from dciclient.v1.api import files_events

from dci.elasticsearch import es_client

import sys
import traceback


dci_context = context.build_dci_context()
conf = dci_config.generate_conf()
es_engine = es_client.DCIESEngine(conf['ES_HOST'], conf['ES_PORT'], 'dci')

print('[*] Start Elasticsearch sync')

last_sequence = es_engine.get_last_sequence(doc_type='logs')

print('[*] Current last sequence number: %s' % last_sequence)

db_current_sequence = -1

#print(files_events.list(dci_context, sequence=0))

try:
    for f_event in files_events.iter(dci_context, sequence=last_sequence+1):
        db_file = f_event['file']
        db_current_sequence = f_event['event']['id']
        if f_event['event']['action'] == 'create':
            file_content = file.content(dci_context, db_file['id'])
            db_file['content'] = str(file_content.content)
            es_engine.index(db_file)
            print('[*] Index file id %s' % db_file['id'])
        elif f_event['event']['action'] == 'delete':
            es_engine.delete(db_file['id'])
            print('[*] Delete file id %s' % db_file['id'])
except:
    print('[*] An error has been encountered\n')
    traceback.print_exc()
    sys.exit(-1)

if db_current_sequence != -1:
    es_engine.update_sequence(db_current_sequence)

print('[*] New last sequence: %s' % max(db_current_sequence, last_sequence))
print('[*] Sync done')
