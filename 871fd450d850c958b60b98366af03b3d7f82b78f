{
  "comments": [
    {
      "key": {
        "uuid": "1a106d94_045222dd",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 30
      },
      "writtenOn": "2016-06-08T16:56:53Z",
      "side": 1,
      "message": "I think we must avoid the use of dci.db.models in our migration scripts because these files WILL evolve, like the DB schema does and this create issues.\n\nThe migration of files.content is a good example:\n\n- commit #a: content is in files.content, we use a migration script (script #a) that relies on modles.py to migration our content from DB to FS.\n\n- we wait a bit and do some unrelated changes\n\n- commit #b: files.content is not required anymore, we drop the column from the models.py and add a migration script.\n\nOops, script #a cannot use models.py to read the content column. commit #b has just broke script #a.\n\nThe migration script are designed to migration a DB version to another one. models.py is tightly linked to the DB version. I don\u0027t think it\u0027s a good idea to create and maintain this relationship.",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_c4f5aacc",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 29
      },
      "writtenOn": "2016-06-08T17:33:14Z",
      "side": 1,
      "message": "Thanks now i understand your point.\n\nBut the purpose of migration script and how Alembic has been designed is to be run against a __running__ database. Once Alembic run a migration script, it stamps the revision ID inside de table alembic_version. This is the way Alembic knows what is the current state of the DB schema.\n\nSo in your case, if Alembic run script #a then it\u0027s because the current state of the database is #a-1.\n\nIn DCI, migration scripts are design to be run in a sequential way (because we don\u0027t handle downgrade), so if you run script #b you should not run script #a. It doesn\u0027t make sense...\n\nMigration scripts make sense only for __running__ database while models.py always refers to head in a specific commit. \n\nThen you cannot compare script #a with models.py of commit #b...",
      "parentUuid": "1a106d94_045222dd",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_a9e8477d",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "please no crappy line breaks\n\n    update_to_puddle_ospd \u003d (\n        _COMPONENTS.update()\n        .where(sql.and_(_COMPONENTS.c.url.contains(\u0027director\u0027),             \n                        _COMPONENTS.c.type \u003d\u003d \u0027puddle\u0027))\n        .values(type\u003d\u0027puddle_ospd\u0027)\n    )",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_89ed8b8e",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "same here",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_e9535f6a",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "query \u003d sql.select([models.JOBDEFINITIONS])\n    all_jobdefinitions \u003d db_conn.execute(query).fetchall()",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_09e23b9f",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "no need for a cast the cast is only needed when we use six or flask dump",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_294e17c2",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "this is \u003c80 no need to break line",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_69ee4f8d",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "cast not needed here",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_c9d783be",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "please stop doing those crappy line breaks\n\nquery \u003d (models.JOINS_JOBS_COMPONENTS\n         .insert()\n         .values(job_id\u003djob[\u0027id\u0027], component_id\u003dcmpt[\u0027id\u0027]))\ndb_conn.execute(query)",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_49cc3336",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "(models.JOBDEFINITIONS\n .update()\n .where(models.JOBDEFINITIONS.c.id \u003d\u003d jd_id)\n .values(component_types\u003dcomponent_types))",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_094b5bb1",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "no need for a break",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_e9da3fe8",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 96,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "I do not understand the purpose of this loop",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_89d62bc4",
        "filename": "dci/alembic/versions/e6c96dce3b95_add_join_table_join_jobs_components.py",
        "patchSetId": 7
      },
      "lineNbr": 98,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "does this variable be used later ?",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_0974fbfb",
        "filename": "dci/api/v1/components.py",
        "patchSetId": 7
      },
      "lineNbr": 93,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "this is \u003c80 characters no need for a line break\n\nlen(rows) seems not good here, as there is an offset and a limit, the _meta number need to be retrieve with q_bd.build_nb_row",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_29773704",
        "filename": "dci/api/v1/components.py",
        "patchSetId": 7
      },
      "lineNbr": 94,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "no need to setup status code 200 is the default for jsonify",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_2920d7f6",
        "filename": "dci/api/v1/topics.py",
        "patchSetId": 7
      },
      "lineNbr": 182,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "team_id \u003d None if auth.is_admin(user) else user[\u0027team_id\u0027]",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a106d94_c9694327",
        "filename": "dci/db/models.py",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 186
      },
      "writtenOn": "2016-06-08T12:53:40Z",
      "side": 1,
      "message": "why JOINS we used to have JOIN in the name of those tables (there is a mistake for TOPICS_TEAMS)",
      "revId": "871fd450d850c958b60b98366af03b3d7f82b78f",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    }
  ]
}