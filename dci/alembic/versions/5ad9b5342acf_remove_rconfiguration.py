#
# Copyright (C) 2019 Red Hat, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

"""Remove rconfiguration

Revision ID: 5ad9b5342acf
Revises: 3eccf653cd30
Create Date: 2019-05-09 09:48:26.146579

"""

# revision identifiers, used by Alembic.
revision = '5ad9b5342acf'
down_revision = '3eccf653cd30'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('remotecis_rconfigurations')
    op.drop_table('rconfigurations')
    op.drop_index('jobs_rconfiguration_id_idx', table_name='jobs')
    op.drop_constraint(u'jobs_rconfiguration_id_fkey', 'jobs', type_='foreignkey')
    op.drop_column('jobs', 'rconfiguration_id')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('jobs', sa.Column('rconfiguration_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key(u'jobs_rconfiguration_id_fkey', 'jobs', 'rconfigurations', ['rconfiguration_id'], ['id'])
    op.create_index('jobs_rconfiguration_id_idx', 'jobs', ['rconfiguration_id'], unique=False)
    op.create_table('rconfigurations',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('etag', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('state', postgresql.ENUM(u'active', u'inactive', u'archived', name='states'), autoincrement=False, nullable=True),
    sa.Column('topic_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('component_types', postgresql.JSON(), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSON(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], [u'topics.id'], name=u'rconfigurations_topic_id_fkey', ondelete=u'CASCADE'),
    sa.PrimaryKeyConstraint('id', name=u'rconfigurations_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('remotecis_rconfigurations',
    sa.Column('remoteci_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('rconfiguration_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['rconfiguration_id'], [u'rconfigurations.id'], name=u'remotecis_rconfigurations_rconfiguration_id_fkey', ondelete=u'CASCADE'),
    sa.ForeignKeyConstraint(['remoteci_id'], [u'remotecis.id'], name=u'remotecis_rconfigurations_remoteci_id_fkey', ondelete=u'CASCADE'),
    sa.PrimaryKeyConstraint('remoteci_id', 'rconfiguration_id', name=u'remotecis_rconfigurations_pkey')
    )
    ### end Alembic commands ###
